
\ 128 VALUE  Max_num_pribor \ максимальное кол-во приборов в программе

REQUIRE  HYPE ~day\hype3\hype3.f
REQUIRE  N_S_PickUpWord ~disa\dopoln.f

CLASS Listmetod \ список всех приборов
	CELL DEFS  datas \ ссылка на данные
	CELL DEFS num_datas  \ количество загруженных ячеек
	CELL DEFS max_datas  \ всего ячеек
	CELL DEFS cell_datas  \ размер ячейки
\ dispose: 
\	datas @ FREE THROW  
\ ;

 init:
  ." CELL = " cell_datas @ . ."  " 
\	  Max_num_pribor  max_datas !
\	  Max_num_pribor   1 +  CELLS    ALLOCATE THROW   datas ! \ готовим место под список приборов
\	 HERE 0 , Max_num_pribor   1 +  CELLS    ALLOT     datas ! \ готовим место под список приборов  в статике!
 ;

: allot  ( ко-во данных  )
." CELL2 = "  cell_datas @ . ."  " DUP . ."  "
	max_datas !
	HERE 0 , max_datas @  1 +  cell_datas @ *   ALLOT     datas ! \ готовим место под список приборов  в статике!
;

: allocate
	max_datas !
	HERE 0 , max_datas @  1 +  cell_datas @ *   ALLOCATE THROW    datas ! \ готовим место под список приборов  в статике!
;

: add   ( -- adr ) \ добавить элемент в конец, выдает адрес куда можно добавлятся
|| D: adr ||
	datas @ num_datas @ cell_datas @ * + adr ! \ 
	num_datas @ max_datas @ < \ защита от переполнения
	IF 
		num_datas @ 1 + num_datas !
	ELSE max_datas @ num_datas  ! THEN
	adr @
 ; 

: del ( -- flag ) \ удалить последний элемент
	num_datas 0 > \ защита от отрицательных значений кол-ва
	IF
		num_datas @ 1 - num_datas !
	ELSE 0 num_datas ! THEN 
;

: adr (  n -- adr  | 0 )
|| D: number || \  получить адрес элемента
	number  !	
		
	number @ 0 <  	number @ max_datas @ > OR  \  номер в пределах таблички
	IF 0
	ELSE 	number @   cell_datas @ *  datas @ +
	THEN
;
\ : take   adr \  DUP IF @ ELSE THEN ;

: number? num_datas @ ; \ кол-во элементов
: clear 0 num_datas ! ;

: made ( ' word -- ) \ выполнить слово "word" над каждым элементом списка
|| D: word ||
word !
	num_datas @  \ max_datas @ MIN  
	0 >  
	IF
		 num_datas @ 0 
		DO
			I adr   word  @ EXECUTE
		LOOP
	THEN 

;


 ;CLASS
 
 Listmetod SUBCLASS ListmetodCell
init: CELL SUPER cell_datas !    ." CELL1 = " SUPER cell_datas @ . ."  "   ;
: add SUPER add !    ;
: take SUPER adr DUP IF @ ELSE THEN  ;
: type @ . ;
: see 	\ ['] type SUPER made 
;
;CLASS
 
 
 Listmetod SUBCLASS ListmetodStr
init: 32  SUPER cell_datas ! ;
: add || D: adr D: u ||     u ! adr !  u @ SUPER cell_datas @  1 - > IF SUPER  cell_datas @  u ! THEN   adr @  SUPER add    u @    CMOVE ;
: type  ASCIIZ> TYPE  ."   " ; 
: see 	 ." see ListmetodStr= " SUPER num_datas @ .   ['] type SUPER made
;
;CLASS
 
 
 
 